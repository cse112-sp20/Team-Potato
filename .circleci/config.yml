version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.0.0

executors:
  nodejs:
    docker:
      - image: circleci/node:latest
  python:
    docker:
      - image: circleci/python:3.7-browsers

jobs:
  build:
    executor: nodejs
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run:
          name: update-npm
          command: sudo npm install -g npm@latest
      - run:
          name: install-dependencies
          command: sudo npm install
      - run:
          name: Fix Vulnerabilities
          command: sudo npm audit fix
      - run:
          name: Install Selenium
          command: sudo npm install selenium-webdriver
      - run:
          name: Generate Build
          command: sudo npm run build-dev
      - run:
          name: Download cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Download cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: check-repo
          command: ls
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  test:
    executor: python
    environment:
      CC_TEST_REPORTER_ID: b14eab13bf27274a062247a941d6337a0b404f2fd7953dbb8885abd1bdbc07fa
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: check-checkout-repo
          command: |
            ls -a
            pwd
            ls -a project/
      - run:
          name: Selenium-setup
          command: sudo pip install selenium
      - run:
          name: Notify CC before tests
          command: ./project/cc-test-reporter before-build
      - run:
          name: Create a directory for raw coverage files
          command: mkdir ./project/.nyc_output
      - run:
          name: HelloWorld-test
          command: python test/hello_world_tests.py
      - run:
          name: Activetab-test
          command: python test/active_tabs_issue\#33.py
      - run:
          name: Tabgroup-test
          command: python test/tabgroup_CRUD_issue\#34.py
      #- run:
      #    name: Website-blocking-test
      #    command: python test/website_blocking_issue\#73_and_\#62.py
      #- run:
      #    name: Focus-popup-timer-test
      #    command: python test/popup_focus_mode_timer_issue\#36_issue\#30.py
      - persist_to_workspace:
          root: /home/circleci/project/project
          paths:
            - .nyc_output

  upload-coverage:
    executor: nodejs
    environment:
      CC_TEST_REPORTER_ID: b14eab13bf27274a062247a941d6337a0b404f2fd7953dbb8885abd1bdbc07fa
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Check Directory Again
          command: |
            ls -a
            pwd
      - run:
          name: Show test coverage file
          command: |
            ls -la .nyc_output
      - run:
          name: update-npm
          command: sudo npm install -g npm@latest
      - run:
          name: install-dependencies
          command: sudo npm install
      - run:
          name: Fix Vulnerabilities
          command: sudo npm audit fix
      - run:
          name: Generate coverage report
          command: sudo npm run report
      - run:
          name: Upload test report
          command: ./project/cc-test-reporter after-build --debug -t lcov

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - upload-coverage:
          requires:
            - build
            - test
